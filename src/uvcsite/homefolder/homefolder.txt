Do a functional doctest test on the app.
========================================

:Test-Layer: functional

Let's first create an instance of of our Application at the top level:

   >>> from uvcsite.app import Uvcsite 
   >>> uvcsite = Uvcsite()
   >>> root = getRootFolder()
   >>> root['app'] = uvcsite 

Let´s set the Site this is a hack because traversal set´s the site

   >>> from zope.component import getUtility
   >>> from zope.site.hooks import getSite, setSite
   >>> setSite(uvcsite)

Check the HomeFolderBase which should be the Members Container

   >>> root['app'].has_key('members')
   True

Do we get the correct object ?

   >>> root['app']['members']
   <uvc.homefolder.components.Homefolders object at 0...>
   

Do we get a utility with our IHomefolders

   >>> from uvc.homefolder.interfaces import IHomefolders
   >>> utility = getUtility(IHomefolders)
   >>> utility
   <uvc.homefolder.components.Homefolders object at 0...>


Look at the constants of the PortalMembership
---------------------------------------------

homeFolderRole?

   >>> utility.roles
   [u'uvc.User', u'uvc.Editor', u'uvc.MasterUser']

containerObject?

   >>> print utility.default
   <class 'uvc.homefolder.components.Homefolder'>

   >>> utility is root['app']['members']
   True

Try to add the user lars. this should work because autoassigment is true

   >>> from uvcsite.tests import startInteraction, endInteraction
   >>> request = startInteraction('lars')

   >>> utility.assign_homefolder('lars')
   >>> 'lars' in utility
   True

Do we get the HomeFolder thourgh the api

   >>> homefolder = utility.get('lars')
   >>> homefolder
   <uvc.homefolder.components.Homefolder object at 0...>


OK now we have our homefolder. this homefolder should now have it´s own
PrincipalRoleMap with settings for lars

   >>> from zope.securitypolicy.interfaces import IPrincipalRoleMap
   >>> rolemap = IPrincipalRoleMap(homefolder) 
   >>> rolemap.getPrincipalsAndRoles()
   [(u'uvc.MasterUser', 'lars', PermissionSetting: Allow), (u'uvc.Editor', 'lars', PermissionSetting: Allow), (u'uvc.User', 'lars', PermissionSetting: Allow)] 

   >>> endInteraction()
