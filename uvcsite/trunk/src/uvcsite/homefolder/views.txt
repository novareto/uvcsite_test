Functional Doctests on homefolder views 
=======================================

:Test-Layer: functional

Setup
-----

  >>> from uvcsite.app import Uvcsite
  >>> root = getRootFolder()

  >>> from uvcsite.homefolder.homefolder import HomeFolder
  >>> homefolder = HomeFolder()
  >>> homefolder
  <uvcsite.homefolder.homefolder.HomeFolder object at ...> 

  >>> root['hf'] = homefolder

  >>> import zope.interface
  >>> import zope.security.interfaces
  >>> class DummyPrincipal(object):
  ...     zope.interface.implements(zope.security.interfaces.IPrincipal)
  ...
  ...     id = "someuser"
  ...     title = "Some User's Name"
  ...     description = "A User"


TableView
---------

  >>> from zope.component import getMultiAdapter
  >>> from zope.publisher.browser import TestRequest
  >>> import zope.security.management

  >>> request = TestRequest()
  >>> request.setPrincipal(DummyPrincipal())
  >>> zope.security.management.newInteraction(request)

  >>> index = getMultiAdapter((homefolder, request), name="index")
  >>> index
  <Index 'index'>

Now we can render the Index Page of the Homefolder: 

  >>> index.update()
  >>> print index.render()
  <html>
  <head>
  </head>
  <body>
   <div>
    <h1>Some User's Name</h1>
    <p>Hier werden Ihre Dokumente abgelegt</p>
    <ul>
    </ul>
    <form action="deleteitem">
    <div></div>
    <table class="listing">
    <thead>
      <tr>
        <th>X</th>
        <th>edit</th>
        <th>Object</th>
        <th>Status</th>
        <th>Autor</th>
        <th>Datum</th>
      </tr>
    </thead>
    <tbody>
    </tbody>
    </table>
    <input type="submit" value="Delte" />
    </form>
   </div>
   </body>
   </html>

There is no table in the view? This is because there
is no content in the Folder. So we have to add some
content to the container to see a table.

Setting up a Container for Person Objects

  >>> import grok
  >>> from uvcsite.interfaces import IContainer
  >>> class PersonContainer(grok.Container):
  ...     grok.implements(IContainer)   

  >>> IContainer.implementedBy(PersonContainer)
  True

Creating a Person Object

  >>> from uvcsite.content.base import Content
  >>> class Person(Content):
  ...     """ """
  ...     name = ""
  ...     age = ""

  >>> hans = Person()
  >>> hans.name = "Hans"
  >>> hans.age = "44"
  >>> hans.__name__ = "hans"

  >>> from uvcsite.interfaces import IContentType
  >>> IContentType.providedBy(hans)
  True

Let's proof if the Homefolder Settings are correct!

  >>> len(homefolder)
  0

  >>> homefolder['personcontainer'] = PersonContainer() 
  >>> 'personcontainer' in homefolder
  True

  >>> homefolder['personcontainer']['hans'] = hans 
  >>> 'hans' in homefolder['personcontainer']
  True

Now call the view with some contents...

  >>> index = getMultiAdapter((homefolder, request), name="index")
  >>> index.update()
  >>> print index.render()
  <html>
  <head>
  </head>
  <body>
   <div>
    <h1>Some User's Name</h1>
    <p>Hier werden Ihre Dokumente abgelegt</p>
    <ul>
        <li>
            <a href="http://127.0.0.1/hf/index?meta_type=personcontainer">
               <span>personcontainer</span>
  	  </a>
        </li>
    </ul>
    <form action="deleteitem">
    <div></div>
    <table class="listing">
    <thead>
      <tr>
        <th>X</th>
        <th>edit</th>
        <th>Object</th>
        <th>Status</th>
        <th>Autor</th>
        <th>Datum</th>
      </tr>
     </thead>
    <tbody>
      <tr class="even">
      <td><input type="checkbox" class="checkbox-widget" name="table-checkBox-0-selectedItems" value="hans"  /></td>
      <td><a href="http://127.0.0.1/hf/personcontainer/hans/edit">edit this item</a></td>
        <td>Person</td>
        <td>Entwurf</td>
        <td>someuser</td>
        <td>...</td>
      </tr>
     </tbody>
    </table>
    <input type="submit" value="Delte" />
    </form>
    </div>
    </body>
    </html>

  >>> zope.security.management.endInteraction()

