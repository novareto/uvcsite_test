ColumnOverride
==============

:doctest:
:layer: uvcsite.tests.FunctionalLayer


Setup
-----

  >>> import grok
  >>> from grok.testing import grok_component
  >>> from zope.app.testing.functional import getRootFolder

  >>> from uvcsite.tests.simpleaddon import AdressBook
  >>> from megrok.z3ctable import LinkColumn

  >>> class OverrideTitleColumn(LinkColumn):
  ...     grok.name('link')
  ...     grok.context(AdressBook)
  ...     header = u"OverrideTitle"
  ...     weight = 1
    
  >>> grok_component('OverrideTitleColumn', OverrideTitleColumn)
  True

  >>> r = getRootFolder()
  >>> r['folder'] = folder = AdressBook()
  >>> folder
  <uvcsite.tests.simpleaddon.AdressBook object at ...>


  >>> import zope.interface
  >>> import zope.security.interfaces
  >>> class DummyPrincipal(object):
  ...     zope.interface.implements(zope.security.interfaces.IPrincipal)
  ...
  ...     id = "someuser" 
  ...     title = "Some User's Name"
  ...     description = "A User"

  >>> from zope.component import getMultiAdapter
  >>> from zope.publisher.browser import TestRequest
  >>> request = TestRequest()
  >>> request.setPrincipal(DummyPrincipal())
  >>> zope.security.management.newInteraction(request)

Views
-----

This are some imports which helps us to call the IndexTable 
of our folder.

Let's call the IndexTable of the folder:

  >>> view = getMultiAdapter((folder, request), name=u"index")
  >>> view.update() 

Instead of the <th>Title<th> we should get <th>OverrideTable</th>:
  
  >>> print view.render()
  <div>...
      <tr>
        <th class="checkBox"></th>
        <th>OverrideTitle</th>
        <th>Objekt</th>
        <th>Status</th>
        <th>Autor</th>
        <th>Datum</th>
      </tr>...  
  </div>

  >>> zope.security.management.endInteraction()
