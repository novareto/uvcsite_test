Check the dynamic table elements in the view of the productfolder 
=================================================================

:doctest:
:layer: uvcsite.tests.FunctionalLayer

Setup
-----

  >>> from zope.app.testing.functional import getRootFolder
  >>> root = getRootFolder()

  >>> from uvcsite.tests.simpleaddon import AdressBook, Contact

  >>> root['folder'] = folder = AdressBook()
  >>> folder
  <uvcsite.tests.simpleaddon.AdressBook object at ...>

  >>> print folder.title
  Adressbook 

  >>> content1 = Contact()
  >>> content1
  <uvcsite.tests.simpleaddon.Contact ...>
  >>> folder['mycontent1'] = content1

  >>> content2 = Contact()
  >>> content2
  <uvcsite.tests.simpleaddon.Contact ...>
  >>> folder['mycontent2'] = content2

Views
-----

This are some imports which helps us to call the IndexTable 
of our folder.

  >>> from zope.component import getMultiAdapter
  >>> from zope.publisher.browser import TestRequest
  >>> request = TestRequest()

Let's call the IndexTable of the folder:

  >>> view = getMultiAdapter((folder, request), name=u"index")
  >>> view.update() 

So if we render we should see our two content objects in the tbody
of our table
  
  >>> print view.render()
  <form...
    <tbody>
      <tr class="even">
        <td><input type="checkbox" class="checkbox-widget" name="deleteFormTable-checkBox-0-selectedItems" value="mycontent1"  /></td>
        <td><a href="http://127.0.0.1/folder/mycontent1">mycontent1</a></td>
        <td>Contact</td>
        <td>Entwurf</td>
        <td></td>
        <td>...</td>
      </tr>
      <tr class="odd">
        <td><input type="checkbox" class="checkbox-widget" name="deleteFormTable-checkBox-0-selectedItems" value="mycontent2"  /></td>
        <td><a href="http://127.0.0.1/folder/mycontent2">mycontent2</a></td>
        <td>Contact</td>
        <td>Entwurf</td>
        <td></td>
        <td>...</td>
      </tr>
    </tbody>
  ...
  </form>

View with content in the Workflow Status gesendet
-------------------------------------------------

We fire publish the content1 object. 

  >>> from hurry.workflow.interfaces import IWorkflowInfo
  >>> IWorkflowInfo(content1).fireTransition('publish')

Objects in the publish status can not be deleted so the
checkbox is gone. And the link does not point on the
edit action it now points on the view action.

  >>> print view.render()
  <form...
    <tbody>
      <tr class="even">
        <td></td>
        <td><a href="http://127.0.0.1/folder/mycontent1">mycontent1</a></td>
        <td>Contact</td>
        <td>gesendet</td>
        <td></td>
        <td>...</td>
      </tr>
      <tr class="odd">
        <td><input type="checkbox" class="checkbox-widget" name="deleteFormTable-checkBox-0-selectedItems" value="mycontent2"  /></td>
        <td><a href="http://127.0.0.1/folder/mycontent2">mycontent2</a></td>
        <td>Contact</td>
        <td>Entwurf</td>
        <td></td>
        <td>...</td>
      </tr>
    </tbody>
  ...
  </form>
