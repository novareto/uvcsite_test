Do a functional doctest test on the helpsystem.
===============================================

:Test-Layer: functional

Folder
------

Let's first create an instance of Uvcsite at the top level:

   >>> from uvcsite.app import Uvcsite
   >>> root = getRootFolder()
   >>> uvcsite = Uvcsite()
   >>> root['app'] = uvcsite
   >>> root['app']
   <uvcsite.app.Uvcsite object at ...>

We should get an hilfe container after instanciating the Uvcsite
application

   >>> root['app'].has_key('hilfe')
   True

The hilfe application should provide the right Interfaces.

   >>> from uvcsite.helpsystem.interfaces import IHelpFolder
   >>> hilfe = root['app']['hilfe']
   >>> IHelpFolder.providedBy(hilfe)
   True


Page
----

Do we have the right interface for our HelpPage

   >>> from uvcsite.helpsystem.page import HelpPage
   >>> from uvcsite.helpsystem.interfaces import IHelpPage
   >>> IHelpPage.implementedBy(HelpPage)
   True

Initalizing of the HelpPage

   >>> hp = HelpPage(name=u'unfallanzeige', title=u'Titel', text=u'Hilfe UAZ')
   >>> print hp.name 
   unfallanzeige

   >>> print hp.title
   Titel

   >>> print hp.text
   Hilfe UAZ


Browser Tests
=============

Add
---

LetÂ´s use the TestBrowser to look on the forms itself.

   >>> from zope.testbrowser.testing import Browser
   >>> browser = Browser()
   >>> browser.addHeader('Authorization', 'Basic mgr:mgrpw')
   >>> browser.handleErrors = False 

But first do we get the index of the container itself?

   >>> browser.open('http://localhost/app/hilfe')
   >>> print browser.contents
   <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
             "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
   <html xmlns="http://www.w3.org/1999/xhtml">
   ...
   <div class="relax"> </div>
            <div>
   </div>
            <div><div>
     <h1>Hilfe</h1>
     <span class="big">Sie koennen auf die einzelnen Dokumente klicken um die Hilfe anzueigen!</span>
     <div class="addContent">
       <h3>
         <a href="add">
         HelpPage anlegen  </a>
       </h3>  
     </div>
     <form action="http://localhost/app/hilfe/@@index"
         method="post" enctype="multipart/form-data"
         class="edit-form" name="deleteFormTable"
         id="deleteFormTable">
     <div class="viewspace">
       <div>
       <div class="tabluarTable">
         <table class="tablesorter myTable">
     <thead>
       <tr>
         <th class="checkBox"></th>
         <th>Titel</th>
         <th>Objekt</th>
         <th>Status</th>
         <th>Autor</th>
         <th>Datum</th>
       </tr>
     </thead>
     <tbody>
     </tbody>
   </table>
       </div>
       <div class="tabluarForm">
       </div>
     </div>
     </div>
     <div>
       <div class="buttons">
       </div>
     </div>
   </form>
   </div>
   </div>
   ...
   </html>

Ok now we can add a new help page!

   >>> browser.open('http://localhost/app/hilfe/add')
   >>> print browser.headers['Status'].upper()
   200 OK

Get the form and look for the right action

   >>> form = browser.getForm()
   >>> print form.action
   http://localhost/app/hilfe/add

Fill out the form with the testbrowser


   >>> form.getControl(name='form.widgets.name').value = "myhelp"
   >>> form.getControl(name='form.widgets.title').value = "beschreibung"
   >>> form.getControl(name='form.widgets.text').value = "HilfeText"

Submit the Form

   >>> browser.getControl(name='form.buttons.add').click()


Display from JTip
-----------------

   >>> browser.open('http://localhost/app/hilfe/myhelp')
   >>> print browser.contents
   <html>
   <body>
   <!--<h1 tal:content="context/name"/>-->
   <!--<h2 tal:content="context/title"/>-->
   <h3>HilfeText</h3>
   </body>
   </html>

Index
-----

   >>> browser.open('http://localhost/app/hilfe/myhelp/overview')
   >>> print browser.headers['Status'].upper()
   200 OK


Edit
----

   >>> browser.open('http://localhost/app/hilfe/myhelp/edit')
   
   >>> form = browser.getForm()
   >>> print form.action
   http://localhost/app/hilfe/myhelp/edit

Do we get the default values from the add operation?

   >>> print form.getControl(name='form.widgets.title').value
   beschreibung 


Are we have the DocumentAction for our overview?

   >>> 'myhelp/aspdf' in browser.contents
   True

PDF Helper
----------

   >>> browser.open('http://localhost/app/hilfe/myhelp/aspdf')
   >>> 'This should be a PDF' in browser.contents
   True
