Functional Doctest For Viewlets
===============================

:Test-Layer: functional

Setup
-----

We have to setup view and context to get our ViewletManager!

   >>> from zope.component import getMultiAdapter
   >>> from zope.publisher.browser import TestRequest
   >>> from zope.contentprovider.interfaces import IContentProvider
   >>> from uvcsite.app import Uvcsite

   >>> import zope.interface
   >>> import zope.security.interfaces
   >>> class DummyPrincipal(object):
   ...     zope.interface.implements(zope.security.interfaces.IPrincipal)
   ...
   ...     id = "someuser"
   ...     title = "Some User's Name"
   ...     description = "A User"


   >>> import zope.security.management
   >>> request = TestRequest()
   >>> request.setPrincipal(DummyPrincipal())

   >>> root = getRootFolder()
   >>> uvcsite = Uvcsite()
   >>> from zope.securitypolicy.interfaces import IPrincipalRoleManager
   >>> #import pdb; pdb.set_trace()
   >>> root['app'] = uvcsite

Context

   >>> context = root['app']
   >>> context
   <uvcsite.app.Uvcsite object at ...>
   >>> prm = IPrincipalRoleManager(context)
   >>> prm.assignRoleToPrincipal('zope.View', 'someuser')
   >>> zope.security.management.newInteraction(request)

View

   >>> view = getMultiAdapter((context, request), name=u"index")
   >>> view   
   <uvcsite.tests.views.Index object at ...>

ViewletManagers and their Viewlets
----------------------------------

GlobalMenu
----------

   >>> manager = getMultiAdapter((context, request, view), IContentProvider, name=u"uvcsite.headers")
   >>> manager 
   <uvc.layout.managers.Headers object ...>

Show the viewlets:

   >>> manager.update()
   >>> [x for x in manager.viewlets]
   [<uvc.skin.viewlets.Favicon object at ...>]
 

Toolbar
-------

   >>> manager = getMultiAdapter((context, request, view), IContentProvider, name=u"uvcsite.toolbar")
   >>> manager 
   <uvc.layout.managers.Toolbar object ...>

Show the viewlets

   >>> manager.update()
   >>> [x for x in manager.viewlets]
   []


PersonalPreferences
-------------------

   >>> manager = getMultiAdapter((context, request, view), IContentProvider, name=u"uvcsite.personalpreferences")
   >>> manager 
   <uvc.layout.managers.PersonalPreferences object ...>

Show the Viewlets:

   >>> manager.update()
   >>> for x in manager.viewlets:
   ...     print x
   <uvcsite.viewlets.globalmenuitems.MyName object at ...>
   <uvcsite.viewlets.globalmenuitems.MyFolder object at ...>
   <uvcsite.viewlets.globalmenuitems.PersonalProperties object at ...>
   <uvcsite.viewlets.globalmenuitems.Logout object at ...>


Sidebar
-------

   >>> manager = getMultiAdapter((context, request, view), IContentProvider, name=u"uvcsite.sidebar")
   >>> manager 
   <uvc.layout.managers.Sidebar object ...>

Show the Viewlets:

   >>> manager.update()
   >>> for x in manager.viewlets:
   ...     print x
   <uvcsite.viewlets.sidebar.Startseite object at ...>

Footer
------

   >>> manager = getMultiAdapter((context, request, view), IContentProvider, name=u"uvcsite.footer")
   >>> manager 
   <uvc.layout.managers.Footer object ...>

Show the Viewlets:

   >>> manager.update()
   >>> len(manager.viewlets)
   3

   >>> for x in manager.viewlets:
   ...     print x
   <uvcsite.viewlets.footer.Impressum object at ...>
   <uvcsite.viewlets.footer.Barrierefreiheit object at ...>
   <uvcsite.viewlets.footer.Kontakt object at ...>


Logo
----

   >>> manager = getMultiAdapter((context, request, view), IContentProvider, name=u"uvcsite.logo")
   >>> manager 
   <uvc.layout.managers.Logo object ...>

Show the Viewlets:

   >>> manager.update()
   >>> for x in manager.viewlets:
   ...     print x
   <uvc.skin.viewlets.Image object at ...>


PersonalMenu
------------

   >>> manager = getMultiAdapter((context, request, view), IContentProvider, name=u"uvcsite.personalpanel")
   >>> manager 
   <uvc.layout.managers.PersonalMenu object ...>

Show the Viewlets:

   >>> manager.update()
   >>> for x in manager.viewlets:
   ...     print x
   <uvcsite.extranetmembership.viewlets.ExtranetMembership object at ...>
   <uvcsite.viewlets.globalmenuitems.ChangePassword object at ...>

StatusMessage
-------------

   >>> manager = getMultiAdapter((context, request, view), IContentProvider, name=u"uvcsite.statusmessage")
   >>> manager 
   <uvc.layout.managers.StatusMessage object ...>

GlobalMenu
----------

   >>> manager = getMultiAdapter((context, request, view), IContentProvider, name=u"uvcsite.globalmenu")
   >>> manager 
   <uvc.layout.managers.GlobalMenu object ...>

Show the Viewlets:

   >>> manager.update()
   >>> for x in manager.viewlets:
   ...     print x

   >>> zope.security.management.endInteraction()

